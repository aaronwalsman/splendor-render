#!/usr/bin/env python
import argparse

import numpy

from renderpy.assets import AssetLibrary
from renderpy.image_light.diffuse import reflect_to_diffuse
from renderpy.image import intensity, even_intensity, load_image, save_image

parser = argparse.ArgumentParser()
parser.add_argument('reflect', type=str)
parser.add_argument('out', type=str)
parser.add_argument('--size', type=int, default=64)
parser.add_argument('--intensity-gamma', type=float, default=3)
parser.add_argument('--samples', type=int, default=100000)
parser.add_argument('--assets', type=str, default=None)

args = parser.parse_args()

asset_library = AssetLibrary(args.assets)
reflect_path = asset_library['image_lights'][args.reflect]
reflect = load_image(reflect_path)
reflect_intensity = (
        (even_intensity(reflect) / 255.) ** args.intensity_gamma * 255.)

diffuse = reflect_to_diffuse(
        args.size,
        reflect,
        reflect_intensity,
        args.samples)

save_image(diffuse, args.out)
